#!/bin/bash

## GentMaint: tools for Gentoo maintenance
## Copyright (c) AstroFloyd, 2008-2018, gentmaint.sf.net
##
## gentmaint-log: run dispatch-conf and list recent updates


function usage () {
    command=`echo ${0} |sed -e 's/^.*\///g'`  # Remove path (e.g. ./)
    gentmaint-version header
    echo
    echo "Run dispatch-conf and show which packages where updated last"
    echo
    echo "Options:"
    echo "  -h:  show this help"
    echo "  -m:  show log files for manual updates, rather than for automated updates"
    echo "  -n:  number of log files (updates) to print the updated packages from"
    echo "  -q:  do not print version banner"
    echo
    exit 0
}


# CLI options:
SHOW_MANUALLOGS=0  # Show log files for manual updates, rather than for automated updates
PRINT_VERSION=1    # Print version banner
NUM_LOGS=3         # Number of log files to display
while getopts "hmn:q" opt; do
    case $opt in
        h) usage;;
        m) SHOW_MANUALLOGS=1;;
        n) NUM_LOGS="$OPTARG";;
        q) PRINT_VERSION=0;;
    esac
done



# Print package/version banner:
if [ $PRINT_VERSION == 1 ]
then
    gentmaint-version header
fi


# Run dispatch-conf:
echo -e '\nRunning dispatch-conf...'
dispatch-conf
echo -e 'Done.\n'



# Check automated update log files:
if [ $SHOW_MANUALLOGS == 1 ]
then
    cd /var/log/gentmaint/manual    # Show log files for manual updates
else
    cd /var/log/gentmaint/auto      # Show log files for automated updates
fi

pwd
echo "Last $NUM_LOGS updates:"
# for file in `ls gentmaint-update__* |tail -n $NUM_LOGS`
for file in `ls -rt * |tail -n $NUM_LOGS`
do
    echo -e "Processing \E[1;32m${file}\E[0m"
    if [ `echo ${file} | grep -E '\.gz$'` ]
    then
	zgrep 'Emerging ' ${file}  &&  echo
	zgrep revdep-rebuild ${file} | grep library | grep -vi done  &&  echo
	zgrep -H 'failed, aborting' ${file}  |  sed 's/.*/\x1B[1;31m&\x1B[0m/'
    else
	bzgrep 'Emerging ' ${file}  &&  echo
	bzgrep revdep-rebuild ${file} | grep library | grep -vi done  &&  echo
	bzgrep -H 'failed, aborting' ${file}  |  sed 's/.*/\x1B[1;31m&\x1B[0m/'
    fi
    echo
done

cd - &> /dev/null


echo -e ''
